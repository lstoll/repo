---
- hosts: workstations
  become: true
  become_user: root
  roles:
    - go-install
    - git-install
    - role: encdisk
      when: "{{ssh_unlock_encroot}}"
  tasks:
  - apt_key: url=https://dl.google.com/linux/linux_signing_key.pub state=present
  - apt_repository: repo='deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' state=present filename='google-chrome'
  - apt_key: url=https://toolbelt.heroku.com/apt/release.key state=present
  - apt_repository: repo='deb http://toolbelt.heroku.com/ubuntu ./' state=present filename='heroku'
  - apt_key: url=https://bazel.io/bazel-release.pub.gpg state=present
  - apt_repository: repo='deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8' state=present filename='heroku'
  - apt_key: keyserver=hkp://ha.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D
  - apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-trusty main' state=present filename=docker
  - apt: update_cache=yes cache_valid_time=3600
  - name: install packages
    apt: name={{item}} state=latest
    with_items:
      - curl
      - lvm2
      - thin-provisioning-tools
      - build-essential
      - ansible
#      - google-chrome-stable
      - awscli
      - gnupg2
      - gnupg-agent
      #- pinentry-gnome3
      - pinentry-gtk2
#      - heroku
      #- shellcheck
      - bazel
      - libssl-dev
      - libreadline-dev
      #- lastpass-cli
      - jq
      - emacs
      - libglib2.0-dev
      - libgnome-keyring-dev
      - silversearcher-ag
      - vim
      - gnome-contacts
      - shutter
      - tmux
#      - docker-engine
#  - name: Install docker-compose
#    get_url: url=https://github.com/docker/compose/releases/download/1.8.1/docker-compose-Linux-x86_64 dest=/usr/local/bin/docker-compose mode=0755
  # TODO - set mode of helper to 0755

- hosts: workstations
  become: true
  become_user: "{{username}}"
  roles:
  tasks:
#  - name: Set gnome keyboard mappings
#    command: gsettings set org.gnome.desktop.input-sources xkb-options "['ctrl:nocaps']"

#  - name: Install rbenv
#    git: repo=https://github.com/rbenv/rbenv.git dest={{ansible_env.HOME}}/.rbenv update=yes

#  - name: Install ruby-build
#    git: repo=https://github.com/rbenv/ruby-build.git dest={{ansible_env.HOME}}/.rbenv/plugins/ruby-build update=yes
  - name: Clone depot-tools
    git:
      repo: https://chromium.googlesource.com/chromium/tools/depot_tools.git
      dest: "{{ansible_env.HOME}}/src/chromium.googlesource.com/chromium/tools/depot_tools"
      update: yes

  - name: Install go linting tools
    command: bash -lc "go get -u github.com/alecthomas/gometalinter && gometalinter -i"

  - name: Install go dev deps
    command: bash -lc "go get -u {{item}}"
    with_items:
      - github.com/nsf/gocode
      - github.com/rogpeppe/godef
      - golang.org/x/tools/cmd/goimports

- hosts: gui-workstations
  become: true
  become_user: root
  roles:
    - vscode-install

- hosts: headless-gui-workstations
  become: true
  become_user: root
  roles:
    - chrome-remote-desktop
  tasks:
    - name: Disable GUI login
      # inverse is graphical.target
      command: systemctl set-default multi-user.target

- hosts: gui-workstations
  become: true
  become_user: "{{username}}"
  roles:
    - name: gnome
      when: ansible_env.DISPLAY is defined
    - vscode

# xenial kernel
# nomachine

# curl -L https://github.com/docker/machine/releases/download/v0.8.2/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine && \
# chmod +x /usr/local/bin/docker-machine

# service docker stop
# echo manual | sudo tee /etc/init/docker.override

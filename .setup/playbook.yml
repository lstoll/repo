---
- hosts: all
  become: true
  become_user: root
  tasks:
  - apt_key: url=https://dl.google.com/linux/linux_signing_key.pub state=present
  - apt_repository: repo='deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' state=present filename='google-chrome'
  - apt_key: url=https://toolbelt.heroku.com/apt/release.key state=present
  - apt_repository: repo='deb http://toolbelt.heroku.com/ubuntu ./' state=present filename='heroku'
  - apt_key: url=https://bazel.io/bazel-release.pub.gpg state=present
  - apt_repository: repo='deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8' state=present filename='heroku'
  - apt_key: keyserver=hkp://ha.pool.sks-keyservers.net:80 id=58118E89F3A912897C070ADBF76221572C52609D
  - apt_repository: repo='deb https://apt.dockerproject.org/repo ubuntu-trusty main' state=present filename=docker
  - apt: update_cache=yes cache_valid_time=3600
  - name: install packages
    apt: name={{item}} state=latest
    with_items:
      - ansible
#      - google-chrome-stable
      - awscli
      - gnupg2
      - gnupg-agent
      #- pinentry-gnome3
      - pinentry-gtk2
#      - scdaemon
#      - pcscd
#      - yubikey-personalization
#      - libusb-1.0-0-dev
#      - heroku
      #- shellcheck
      - bazel
      - libssl-dev
      - libreadline-dev
      #- lastpass-cli
      - jq
      - emacs
      - libglib2.0-dev
      - libgnome-keyring-dev
      - silversearcher-ag
      - vim
      - gnome-contacts
      - shutter
#      - docker-engine
#  - name: Install docker-compose
#    get_url: url=https://github.com/docker/compose/releases/download/1.8.1/docker-compose-Linux-x86_64 dest=/usr/local/bin/docker-compose mode=0755
#  - name: Build gnome-keyring
#    command: make chdir=/usr/share/doc/git/contrib/credential/gnome-keyring creates=/usr/share/doc/git/contrib/credential/gnome-keyring/git-credential-gnome-keyring
  # TODO - set mode of helper to 0755

  - name: Find go version
    command: sh -c "/usr/local/go/bin/go version | grep -Po '(?<=go)([\w\.]+)'"
    register: goversion
    ignore_errors: True
  - name: Download go tarball
    get_url: url="https://storage.googleapis.com/golang/go1.9.1.linux-amd64.tar.gz" dest="/tmp/go.tgz"
    when: goversion.stdout != "1.9.1"
    register: got_go
  - name: Remove old go install
    command: rm -fr /usr/local/go
    when: got_go.changed
  - name: Extract go tarball
    unarchive: src=/tmp/go.tgz dest=/usr/local
    when: goversion.stdout != "1.9.1"

- hosts: all
  become: true
  become_user: lstoll
  tasks:
#  - name: Set gnome keyboard mappings
#    command: gsettings set org.gnome.desktop.input-sources xkb-options "['ctrl:nocaps']"

#  - name: Install rbenv
#    git: repo=https://github.com/rbenv/rbenv.git dest={{ansible_env.HOME}}/.rbenv update=yes

#  - name: Install ruby-build
#    git: repo=https://github.com/rbenv/ruby-build.git dest={{ansible_env.HOME}}/.rbenv/plugins/ruby-build update=yes

  - name: Install go linting tools
    command: bash -lc "go get -u github.com/alecthomas/gometalinter && gometalinter -i"

  - name: Install go dev deps
    command: bash -lc "go get -u {{item}}"
    with_items:
      - github.com/nsf/gocode
      - github.com/rogpeppe/godef
      - golang.org/x/tools/cmd/goimports

# xenial kernel
# nomachine

# curl -L https://github.com/docker/machine/releases/download/v0.8.2/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine && \
# chmod +x /usr/local/bin/docker-machine

# service docker stop
# echo manual | sudo tee /etc/init/docker.override
